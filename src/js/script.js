let name = prompt('–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?');
if (name) {
  alert('–ü—Ä–∏–≤–µ—Ç, ' + name);
} else {
  alert('–•–æ—Ä–æ—à–æ, –º–æ–∂–µ—Ç–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—Å—è');
}

let likesCars = confirm('–¢–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è –∫–æ—à–∫–∏?');
if (likesCars) {
  alert('–¢—ã —Ç–æ–∂–µ –Ω—Ä–∞–≤–∏—à—å—Å—è –∫–æ—à–∫–∞–º! üòª ' + '–∏–¥—ë–º –¥–∞–ª—å—à–µ..üôÇ');
} else {
  alert('–ß—Ç–æ –∂, –Ω–µ –ø—Ä–æ–±–ª–µ–º–∞, —Ç—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –º–æ–ª–æ–¥–µ—Ü üòâ');
}



let words = [
  "–ø—Ä–æ–≥—Ä–∞–º–º–∞",
  "–º–∞–∫–∞–∫–∞",
  "–ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π",
  "–æ–ª–∞–¥—É—à–µ–∫",
  "–ª–µ–≤",
  "—Ñ–ª–∞–º–∏–Ω–≥–æ",
  "–±–µ–ª—ã–π –º–µ–¥–≤–µ–¥—å",
  "—É–¥–∞–≤",
  "–º—É—Ö–∞",
  "–≤—ã–¥—Ä–∞",
  "–¥—É–±–∏–Ω–∞",
  "–º–∞—Ä—Ç—ã—à–∫–∞",
  "—Ä—É–∫–∞",
  "—Å—Ç—Ä–∞–Ω–∞",
  "–≥–ª–∞–∑",
  "—Ä–µ–±–µ–Ω–æ–∫",
  "–¥–æ–º",
  "—á–∏—Å–ª–æ",
  "–∂–µ–Ω–∞",
  "—É—Å–ª–æ–≤–∏–µ",
  "–º–∞–º–∞",
  "—É–ª–∏—Ü–∞",
  "—Å–æ—Å—Ç–æ—è–Ω–∏–µ",
  "–≥–ª–∞–≤–∞",
  "–¥–≤–∏–∂–µ–Ω–∏–µ",
  "—Ä—É–±–ª—å",
  "–Ω–∞—É–∫–∞",
  "–∫—Ä–∞–π",
  "–∫–ª–∞—Å—Å",
  "—Ñ–∞–∫—Ç",
  "–Ω–∞–∑–≤–∞–Ω–∏–µ",
  "—Å–æ–ª–¥–∞—Ç",
  "–º–∏–ª–ª–∏–æ–Ω",
  "–ø—Ä–æ–¥—É–∫—Ü–∏—è",
  "—Å—É–º–º–∞",
  "—Ñ–æ–Ω–¥",
  "–æ–≥–æ–Ω—å",
  "–≤–æ–ª–æ—Å",
  "–æ—Ñ–∏—Ü–µ—Ä",
  "–Ω–∏–∫–∏—Ç–∞",
  "–∞—Ä—Ç—ë–º",
  "–º–∞–∫—Å–∏–º",
  "–∂–µ–Ω—è",
];

let word = words[Math.floor(Math.random() * words.length)];

let answerArray = [];
for (i = 0; i < word.length; i++) {
  answerArray[i] = '_';
}

let remainingLetters = word.length;
let attempts = 10;

alert('–£ —Ç–µ–±—è –µ—Å—Ç—å ' + attempts + ' –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ –æ–¥–Ω–æ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ');

while (remainingLetters > 0 && attempts > 0) {

  alert(answerArray.join(' ') + ' ' + ' –Ω–∞–∂–º–∏ "–û–ö"');

  let guess = prompt('–£–≥–∞–¥–∞–π—Ç–µ –±—É–∫–≤—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" —á—Ç–æ –±—ã –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–≤–µ—Ç!');

  if (guess === null) {
    alert('–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã üòâ');
    break;
  } else if (guess.length == '0') {
    alert('–ù–µ –æ—Å—Ç–∞–ª–≤—è–π—Ç–µ –ø–æ–ª–µ –ø—É—Å—Ç—ã–º.');


  } else if (guess.length !== 1) {
    alert('–í–≤–µ–¥–∏—Ç–µ, —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –±—É–∫–≤—É.');

  } else {
    for (j = 0; j < word.length; j++) {
      if (word[j] === guess.toLowerCase() && answerArray[j] === "_") {
        answerArray[j] = guess.toLowerCase();
        remainingLetters--;
      }
    }

    attempts--;
    alert('–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: ' + attempts);

    if (attempts === 10) {
      alert('–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª üò•');
    }
  }
}

if (remainingLetters == 0) {
  alert(answerArray.join(''));
  alert('–û—Ç–ª–∏—á–Ω–æ! –í—ã –æ–¥–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ - ' + word);
}